name: GHAction server-image

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source_repo
        uses: actions/checkout@v4

      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/server-image
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image without pushing
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/server-image:latest

      - name: Docker Scout vulnerability scan
        id: scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ vars.DOCKERHUB_USERNAME }}/server-image:${{ steps.meta.outputs.version }}
          sarif-file: sarif-output.json
          summary: true

      - name: Fail if critical vulnerabilities found
        run: |
          if grep -q "critical" sarif-output.json; then
            echo "Critical vulnerabilities found, failing build"
            exit 1
          fi

      - name: Push Docker image if no critical or high vulnerabilities
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/server-image:cache
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/server-image:cache
          tags: ${{ steps.meta.outputs.tags }}
